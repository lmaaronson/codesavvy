@charset "UTF-8";
@import url("https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700");
/*! normalize.css v2.1.3 | MIT License | git.io/normalize */
/* ==========================================================================
   HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined in IE 8/9.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block; }

/**
 * Correct `inline-block` display not defined in IE 8/9.
 */
audio,
canvas,
video {
  display: inline-block; }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9.
 * Hide the `template` element in IE, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* ==========================================================================
   Base
   ========================================================================== */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* ==========================================================================
   Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background: transparent; }

/**
 * Address `outline` inconsistency between Chrome and other browsers.
 */
a:focus {
  outline: thin dotted; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* ==========================================================================
   Typography
   ========================================================================== */
/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari 5, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9, Safari 5, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari 5, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari 5 and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  height: 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Correct font family set oddly in Safari 5 and Chrome.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, serif;
  font-size: 1em; }

/**
 * Improve readability of pre-formatted text in all browsers.
 */
pre {
  white-space: pre-wrap; }

/**
 * Set consistent quote types.
 */
q {
  quotes: "\201C" "\201D" "\2018" "\2019"; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* ==========================================================================
   Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9.
 */
img {
  border: 0; }

/**
 * Correct overflow displayed oddly in IE 9.
 */
svg:not(:root) {
  overflow: hidden; }

/* ==========================================================================
   Figures
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari 5.
 */
figure {
  margin: 0; }

/* ==========================================================================
   Forms
   ========================================================================== */
/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * 1. Correct font family not being inherited in all browsers.
 * 2. Correct font size not being inherited in all browsers.
 * 3. Address margins set differently in Firefox 4+, Safari 5, and Chrome.
 */
button,
input,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
button,
input {
  line-height: normal; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Chrome, Safari 5+, and IE 8+.
 * Correct `select` style inheritance in Firefox 4+ and Opera.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * 1. Address `appearance` set to `searchfield` in Safari 5 and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari 5 and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari 5 and Chrome
 * on OS X.
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * 1. Remove default vertical scrollbar in IE 8/9.
 * 2. Improve readability and alignment in all browsers.
 */
textarea {
  overflow: auto;
  /* 1 */
  vertical-align: top;
  /* 2 */ }

/* ==========================================================================
   Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

@font-face {
  font-family: "codesavvy";
  src: url("fonts/codesavvy.ttf?yl65s4") format("truetype"), url("fonts/codesavvy.woff?yl65s4") format("woff"), url("fonts/codesavvy.svg?yl65s4#codesavvy") format("svg");
  font-weight: normal;
  font-style: normal; }

i {
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: "codesavvy" !important;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

.icon-mail:before {
  content: ""; }

.icon-map-pin:before {
  content: ""; }

.icon-phone:before {
  content: ""; }

.icon-arrow-down:before {
  content: ""; }

.icon-arrow-down-left:before {
  content: ""; }

.icon-arrow-down-right:before {
  content: ""; }

.icon-arrow-left:before {
  content: ""; }

.icon-arrow-right:before {
  content: ""; }

.icon-arrow-up:before {
  content: ""; }

.icon-arrow-up-left:before {
  content: ""; }

.icon-arrow-up-right:before {
  content: ""; }

.icon-bluetooth:before {
  content: ""; }

.icon-check:before {
  content: ""; }

.icon-chevron-down:before {
  content: ""; }

.icon-chevron-left:before {
  content: ""; }

.icon-chevron-right:before {
  content: ""; }

.icon-chevron-up:before {
  content: ""; }

.icon-chevrons-down:before {
  content: ""; }

.icon-chevrons-left:before {
  content: ""; }

.icon-chevrons-right:before {
  content: ""; }

.icon-chevrons-up:before {
  content: ""; }

.icon-clock:before {
  content: ""; }

.icon-download-cloud:before {
  content: ""; }

.icon-facebook:before {
  content: ""; }

.icon-github:before {
  content: ""; }

.icon-linkedin:before {
  content: ""; }

.icon-lock:before {
  content: ""; }

.icon-play:before {
  content: ""; }

.icon-rss:before {
  content: ""; }

.icon-search:before {
  content: ""; }

.icon-settings:before {
  content: ""; }

.icon-star:before {
  content: ""; }

.icon-twitter:before {
  content: ""; }

.icon-unlock:before {
  content: ""; }

.icon-upload-cloud:before {
  content: ""; }

.icon-user:before {
  content: ""; }

.icon-users:before {
  content: ""; }

.icon-wifi:before {
  content: ""; }

.icon-x:before {
  content: ""; }

.icon-x-circle:before {
  content: ""; }

.icon-youtube:before {
  content: ""; }

/**
 * base styling
 */
* {
  -webkit-box-sizing: border-box;
          box-sizing: border-box; }

*:before,
*:after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit; }

html,
footer {
  font-size: 100%;
  font-weight: 300; }

body {
  font-family: "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-size: 100%;
  line-height: 1.6;
  color: #333;
  background-color: #fff;
  padding: 0;
  margin: 0; }

h1 {
  font-size: 1.75em;
  font-weight: 300;
  color: #3A1366; }

section h1 {
  border-bottom: 1px solid #5b4382; }

h2 {
  font-size: 1.5em;
  font-weight: 300; }

h3 {
  color: #333;
  font-size: 1em;
  font-weight: 600;
  line-height: 1.5625;
  margin-bottom: 0; }

h1 + h4 {
  font-size: 1.25em;
  font-weight: 600; }

p {
  color: #333;
  font-size: 1em;
  line-height: 1.4;
  font-weight: 300; }
  p.center {
    text-align: center; }

input,
button,
select,
textarea {
  font-family: inherit;
  font-size: inherit;
  line-height: inherit; }

a {
  color: #ff8000;
  text-decoration: none;
  cursor: pointer;
  -webkit-transition: color, background-color 0.5s;
  transition: color, background-color 0.5s; }
  a:hover, a:focus {
    text-decoration: none; }

.clearfix:before, .clearfix:after,
.container:before,
.container:after {
  content: " ";
  display: table; }

.clearfix:after,
.container:after {
  clear: both; }

.container {
  max-width: 1024px;
  margin: 0 auto;
  padding: 0 30px; }
  @media (max-width: 1024px) {
    .container {
      padding: 0 30px; } }
  @media (max-width: 620px) {
    .container {
      padding: 0 10px; } }

img {
  max-width: 100%;
  height: auto;
  display: inline-block; }

.img-left {
  float: left;
  margin: 0 20px 10px 0; }

.img-right {
  float: right;
  margin: 0 0 10px 20px; }

hr {
  margin: 1em 0; }

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0; }

.sr-only-focusable:active, .sr-only-focusable:focus {
  position: static;
  width: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  clip: auto; }

[role="button"] {
  cursor: pointer; }

.pull-left {
  float: left; }

.pull-right {
  float: right; }

[disabled],
.is-disabled {
  color: #ccc !important; }

.has-highlight {
  background-color: #f8f8f8 !important; }

.nowrap {
  white-space: nowrap;
  font-size: 1em !important; }

blockquote {
  padding: 20px;
  background-color: #f5f5f5;
  font-style: italic; }

.wide-screen-only {
  display: block; }

.narrow-screen-only {
  display: none; }

@media (max-width: 768px) {
  .wide-screen-only {
    display: none; }
  .narrow-screen-only {
    display: block; } }

.image-cover {
  background-size: cover; }

.section-row {
  width: 100%;
  min-height: 400px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex; }
  .section-row.auto-height {
    min-height: 0; }

.section-row__left,
.section-row__right {
  -ms-flex-preferred-size: 50%;
      flex-basis: 50%; }

@media (max-width: 700px) {
  .section-row {
    display: block; }
  .section-row__left,
  .section-row__right {
    width: 100%; } }

.btn,
[type='submit'] {
  display: inline-block;
  margin-bottom: 0;
  height: 40px;
  line-height: 2.2em;
  padding: 0 30px;
  border: 2px solid #e9212d;
  font-weight: 400;
  text-transform: uppercase;
  text-align: center;
  -ms-touch-action: manipulation;
      touch-action: manipulation;
  cursor: pointer;
  background-image: none;
  border: 2px solid transparent;
  white-space: nowrap; }
  .btn:hover, .btn:focus,
  [type='submit']:hover,
  [type='submit']:focus {
    text-decoration: none; }
  .btn:active,
  [type='submit']:active {
    outline: 0;
    background-image: none; }
  .btn.disabled, .btn[disabled],
  fieldset[disabled] .btn,
  [type='submit'].disabled,
  [type='submit'][disabled],
  fieldset[disabled]
  [type='submit'] {
    cursor: not-allowed;
    opacity: 0.3; }

a.btn.disabled,
fieldset[disabled] a.btn {
  pointer-events: none; }

.btn_b1 {
  color: #fff;
  background: #ff8000;
  border: 2px solid #ff8000; }
  .btn_b1:hover {
    color: #fff;
    background-color: #5b4382;
    border: 2px solid #5b4382; }

.btn_b2 {
  color: rgba(255, 255, 255, 0.9);
  background-color: #e9212d; }

.btn_b3 {
  color: #fff;
  background-color: #e9212d; }
  .btn_b3:hover {
    color: #e9212d;
    background: none; }

.header-wrapper {
  height: 100px; }

header {
  position: fixed;
  top: 0;
  z-index: 1000;
  width: 100%;
  height: 100px;
  background-color: rgba(255, 255, 255, 0.9);
  padding: 0 30px;
  -webkit-transition: background-color 0.5s;
  transition: background-color 0.5s; }
  header .btn {
    position: absolute;
    top: 27px;
    right: 150px; }
    @media (max-width: 500px) {
      header .btn {
        right: 90px;
        padding: 0 15px;
        font-size: 14px;
        line-height: 2.5; } }

.brand {
  position: absolute;
  top: 0;
  left: 50px;
  z-index: 1001;
  display: block;
  max-height: 100px; }
  @media (max-width: 500px) {
    .brand {
      left: 10px; } }
  .brand .main-logo {
    display: block; }
    .brand .main-logo img {
      max-height: 100px;
      width: auto; }
      @media (max-width: 500px) {
        .brand .main-logo img {
          width: 120px;
          height: auto; } }

.home .brand {
  display: none; }

.navigation {
  position: absolute;
  top: 0;
  right: 0;
  width: 320px; }
  .navigation ul {
    list-style: none;
    padding: 70px 30px 30px;
    background-color: rgba(255, 255, 255, 0.9);
    -webkit-box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.4);
            box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.4);
    display: none; }
    .navigation ul li {
      text-align: right;
      padding: 10px 0; }

.hamburger {
  position: absolute;
  top: 15px;
  right: 50px;
  width: 65px;
  height: 65px;
  cursor: pointer;
  display: block;
  border: none; }
  @media (max-width: 500px) {
    .hamburger {
      right: 10px; } }
  .hamburger:focus {
    outline: 0; }
  .hamburger span,
  .hamburger span:before,
  .hamburger span:after {
    cursor: pointer;
    height: 5px;
    width: 35px;
    background: #3A1366;
    position: absolute;
    top: 30px;
    left: 15px;
    display: block;
    content: '';
    -webkit-transition: all 500ms ease-in-out;
    transition: all 500ms ease-in-out; }
  .hamburger span:before {
    top: -10px;
    left: 0; }
  .hamburger span:after {
    top: auto;
    bottom: -10px;
    left: 0; }
  .hamburger:hover span,
  .hamburger:hover span:before,
  .hamburger:hover span:after {
    background: #5b4382; }

.navActive .hamburger {
  background: none; }
  .navActive .hamburger span {
    background-color: transparent; }
  .navActive .hamburger span:before,
  .navActive .hamburger span:after {
    top: 0; }
  .navActive .hamburger span:before {
    -webkit-transform: rotate(45deg);
            transform: rotate(45deg); }
  .navActive .hamburger span:after {
    -webkit-transform: rotate(-45deg);
            transform: rotate(-45deg); }
  .navActive .hamburger:hover span:before,
  .navActive .hamburger:hover span:after {
    background: #5b4382; }

#toTop {
  display: block;
  position: fixed;
  bottom: 20px;
  right: 20px;
  z-index: 1000;
  -webkit-transition: all .5s ease 0s;
  transition: all .5s ease 0s;
  cursor: pointer;
  width: 60px;
  height: 60px;
  line-height: 60px;
  text-align: center;
  background-color: rgba(255, 255, 255, 0.6);
  color: #ff8000;
  font-size: 30px;
  -webkit-box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.4);
          box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.4); }

.welcome-section {
  position: relative;
  height: 100vh; }
  .welcome-section .icon-arrow-down {
    display: block;
    position: absolute;
    top: 70%;
    left: 50%;
    margin-left: -25px;
    width: 50px;
    height: 50px;
    font-size: 32px; }

.welcome-section__header {
  position: absolute;
  top: 20%;
  left: 0;
  width: 100%;
  height: 200px;
  background-attachment: fixed;
  background-position: center -150px;
  background-repeat: no-repeat;
  -webkit-transition: width 0.5s;
  transition: width 0.5s; }
  @media (max-width: 768px) {
    .welcome-section__header {
      top: 10%;
      background-position: center -450px;
      background-attachment: scroll; } }
  .welcome-section__header h1 {
    margin: 0;
    position: absolute;
    bottom: -1.9vw;
    left: 30px;
    font: bold 13vw/1 arial, sans-serif;
    color: #f0f0f0;
    opacity: 0.9;
    border: none; }

.isLoading .welcome-section__header {
  width: 0%; }

.welcome-section__text {
  position: absolute;
  bottom: -50px;
  right: 50px;
  text-align: right;
  font-size: 4vw;
  margin: 0; }

.about-section {
  padding-bottom: 100px; }

.youth-programs-section ul {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  margin: 0;
  padding: 0; }
  @media (max-width: 620px) {
    .youth-programs-section ul {
      display: block; } }
  .youth-programs-section ul li {
    position: relative;
    overflow: hidden;
    list-style: none;
    -webkit-box-flex: 0;
        -ms-flex: 0 1 50%;
            flex: 0 1 50%;
    max-width: 50%;
    height: 0;
    padding-bottom: 50%;
    background-size: 100%;
    background-position: center center;
    -webkit-transition: all 0.3s;
    transition: all 0.3s;
    opacity: 0.5; }
    @media (max-width: 620px) {
      .youth-programs-section ul li {
        margin: 0 auto;
        width: 300px;
        max-width: 300px;
        height: 300px; } }
    .youth-programs-section ul li:hover {
      background-size: 110%;
      cursor: pointer;
      opacity: 1; }
    .youth-programs-section ul li > a {
      display: block;
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0; }
    .youth-programs-section ul li .inner {
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      background-color: rgba(0, 0, 0, 0.7);
      padding: 0 20px;
      opacity: 0;
      -webkit-transition: opacity 0.3s;
      transition: opacity 0.3s; }
    .youth-programs-section ul li:hover .inner {
      opacity: 1; }
    .youth-programs-section ul li h2 {
      font-size: 4vw;
      line-height: 1;
      font-weight: 600;
      text-shadow: 2px 0px 8px rgba(0, 0, 0, 0.8);
      text-align: center;
      color: #eee; }
    .youth-programs-section ul li p {
      color: #eee; }
      .youth-programs-section ul li p:after {
        font-family: 'codesavvy' !important;
        speak: none;
        font-style: normal;
        font-weight: normal;
        font-variant: normal;
        text-transform: none;
        line-height: 1;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
        font-size: 18px;
        color: #eee;
        content: "";
        position: relative;
        top: 1px;
        left: 10px; }

.accordion .accordion-head {
  position: relative;
  padding: 5px 10px;
  border: 1px solid #ccc;
  font-size: 18px;
  margin-top: 0; }
  .accordion .accordion-head:hover {
    background-color: #f8f8f8;
    cursor: pointer; }
  .accordion .accordion-head .icon {
    position: absolute;
    top: 30%;
    right: 30px;
    line-height: 1; }
  .accordion .accordion-head + div {
    display: none; }
    .accordion .accordion-head + div p:first-child {
      margin-top: 0; }

ul, ol {
  margin: 20px 0; }
  ul li, ol li {
    color: inherit;
    padding-bottom: 10px;
    line-height: 1.4; }

.list-unstyled {
  padding-left: 0;
  list-style: none; }

.list-inline {
  padding-left: 0;
  list-style: none; }
  .list-inline > li {
    display: inline-block;
    padding: 0 5px; }

dl {
  margin: 0 0 1em; }

dt,
dd {
  line-height: 1em; }

dt {
  font-weight: bold; }

dd {
  margin-left: 0; }

.team-list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-align: end;
      -ms-flex-align: end;
          align-items: flex-end;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap; }
  @media (max-width: 620px) {
    .team-list {
      display: block; } }
  .team-list li {
    width: 280px;
    text-align: center; }
    @media (max-width: 620px) {
      .team-list li {
        display: block;
        margin: 0 auto; } }

.sponsors-list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: end;
      -ms-flex-align: end;
          align-items: flex-end;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap; }
  .sponsors-list li {
    width: 280px;
    text-align: center;
    padding-bottom: 30px; }

footer {
  height: 350px;
  background-position: center;
  padding: 30px;
  text-align: center; }
  footer .container {
    height: 100%;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center; }
  footer .icon {
    font-size: 30px;
    padding: 0 30px; }

.contact-form {
  background-color: #f5f5f5;
  padding: 50px; }
  @media (max-width: 800px) {
    .contact-form {
      padding: 50px 20px; } }
  .contact-form .form-element {
    padding: 10px 0; }
  .contact-form input,
  .contact-form textarea {
    width: 100%;
    min-height: 30px;
    padding: 10px;
    border: 1px solid #f0f0f0;
    font-size: 16px; }
  .contact-form ::-webkit-input-placeholder {
    /* Chrome/Opera/Safari */
    color: #ccc;
    font-weight: 300; }
  .contact-form ::-moz-placeholder {
    /* Firefox 19+ */
    color: #ccc;
    font-weight: 300; }
  .contact-form :-ms-input-placeholder {
    /* IE 10+ */
    color: #ccc;
    font-weight: 300; }
  .contact-form :-moz-placeholder {
    /* Firefox 18- */
    color: #ccc;
    font-weight: 300; }

.contact-info {
  background-color: #3A1366;
  color: #333;
  padding: 50px; }

.contact-snippets {
  list-style: none; }
  .contact-snippets li {
    position: relative;
    padding-left: 60px;
    margin-bottom: 20px; }
    .contact-snippets li .icon {
      position: absolute;
      top: 5px;
      left: 10px;
      font-size: 28px;
      color: #fff; }
    .contact-snippets li p {
      margin: 0;
      color: #fff; }
      .contact-snippets li p:first-of-type {
        text-transform: uppercase;
        font-weight: 700;
        font-size: 0.9em; }
      .contact-snippets li p a {
        text-decoration: none;
        color: inherit; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
